;; ** Variables ***********************************************************************
;; System vars
(defpoll BLIGHT :interval "0.1s" `bash ../scripts/sys_info --get-blight`)
(defpoll BATTERY :interval "1s" `bash ../scripts/sys_info --bat`)
(defpoll BATTERYICON :interval "1s" `bash ../scripts/sys_info --baticon`)
(defpoll BLUETOOTH :interval "0.1s" `bash ../scripts/sys_info --get-bluetooth`)
(defpoll VOLUME :interval "0.1s" `bash ../scripts/sys_info --get-vol`)
(defpoll VOLUMEICON :interval "0.1s" `bash ../scripts/sys_info --get-volicon`)
(defpoll MIC :interval "0.1s" `bash ../scripts/sys_info --get-mic`)
(defpoll MICICON :interval "0.1s" `bash ../scripts/sys_info --get-micicon`)
(defpoll NET :interval "0.1s" `bash ../scripts/sys_info --get-net`)


;; Music vars
(defpoll SONG :interval "0.1s" `bash ../scripts/music --song`)
(defpoll ARTIST :interval "0.1s" `bash ../scripts/music --artist`)
(defpoll STATUS :interval "0.1s" `bash ../scripts/music --status`)
(defpoll COVER :interval "0.1s" `bash ../scripts/music --cover`)


;; Calendar vars
(defpoll day :interval "1s" "date '+%d'")
(defpoll year :interval "1s" "date '+%Y'")


;; ** Elements **************************************************************************
;; system sliders
(defwidget sys_sliders []
    (box :class "genwin" :vexpand "false" :hexpand "false" :width 325
        (box :class "slidersbox" :orientation "v" :spacing 10 :halign "center" :valign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
            (box :class "volume_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
                (button :width 30 :onclick "bash ../scripts/sys_info --toggle-vol"
                    (label :class "iconvolume" :text VOLUMEICON)
                )

                (scale :min 0 :max 100 :value VOLUME :active "true" :onchange "bash ../scripts/sys_info --set-vol {}")
            )

            (box :class "mic_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
                (button :width 30 :onclick "bash ../scripts/sys_info --toggle-mic"
                    (label :class "iconmic" :text MICICON)
                )

                (scale :min 0 :max 100 :value MIC :active "true" :onchange "bash ../scripts/sys_info --set-mic {}")
            )

            (box :class "bright_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
                (button :width 30 :onclick ""
                    (label :width 30 :class "iconbright" :text "󰃞")
                )

                (scale :min 0 :max 255 :value BLIGHT :active "true" :onchange "bash ../scripts/sys_info --set-blight {}")
            )
        )
    )
)


;; battery
(defwidget battery []
    (box :class "genwin" :vexpand "false" :hexpand "false" :width 65
        (box :class "battery" :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
            (label :class "baticon" :text BATTERYICON)
            (label :text BATTERY)
        )
    )
)


;; network
(defwidget network []
    (box :class "genwin" :vexpand "false" :hexpand "true" :orientation "h" :width 200
        (button :class "btn_net" :onclick "bash ../scripts/sys_info --toggle-net" :onmiddleclick ""
            (label :class "network" :text NET)
        )
    )
)


;; bluetooth
(defwidget bluetooth []
    (box :class "genwin" :vexpand "false" :hexpand "false" :width 60
        (button :class "btn_bluet" :onclick "bash ../scripts/sys_info --toggle-bluetooth" :onmiddleclick ""
            (label :class "bluetooth" :text BLUETOOTH)
        )
    )
)


;; Power Button
(defwidget powerbutton []
    (box :class "genwin" :vexpand "false" :hexpand "false" :width 60
        (button :class "btn_poweroff" :onclick "bash $HOME/.config/rofi/powermenu.sh" "")
    )
)


;; ** Widgets **************************************************************************
;;system
(defwidget system []
    (box :space-evenly "false" :orientation "v" :spacing 10 :width 400
        (box :class "row" :orientation "h" :space-evenly "false" :spacing 10 :height 60
            (network)
            (bluetooth)
            (powerbutton)
        )
        (box :class "row" :orientation "h" :space-evenly "false" :spacing 10 :height 60
            (battery)
            (sys_sliders)
        )
    )
)


;; Music
(defwidget music []
    (box :class "genwin" :orientation "v" :space-evenly "false" :vexpand "false" :hexpand "false"
        (box :class "genwin" :orientation "h" :space-evenly "true" :vexpand "false" :hexpand "false"
            (box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
            (box :orientation "v" :width 80
                (label :halign "center" :class "song" :wrap "true" :limit-width 20 :text SONG)
                (label :halign "center" :class "artist" :wrap "true" :limit-width 15 :text ARTIST)
            )
        )

        (box :orientation "h" :spacing 20 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false"
            (button :class "btn_prev" :onclick "bash ../scripts/music --prev" "󰒮 ")
            (button :class "btn_play" :onclick "bash ../scripts/music --toggle" STATUS)
            (button :class "btn_next" :onclick "bash ../scripts/music --next" "󰒭")
        )
    )
)


;; Calendar
(defwidget cal []
    (box :class "genwin" :orientation "v"
        (calendar :class "cal" :day day :year year)
    )
)


;; ******** DASHBOARD ********************************************************************
(defwidget dashboard []
    (box :class "background" :space-evenly "false" :orientation "v" :spacing 15 :width 400
        (system)
        (music)
        (cal)
    )
)


;; ** Windows *************************************************************************
(defwindow dashboard :stacking "fg" :focusable "false" :monitor 0 :geometry (geometry :anchor "top right" :x -5 :y 45)
    (dashboard)
)
