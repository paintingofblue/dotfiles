#!/bin/bash

# <-- Brightness ->>
# Get Brightness
get_blight() {
    echo "$(brightnessctl get)"
}

# Set Brightness
set_blight() {
    brightnessctl set "$1"
}


# <-- Battery -->
# Get Battery
get_battery() {
    BAT=$(ls /sys/class/power_supply | grep BAT | head -n 1)
    echo "$(cat /sys/class/power_supply/"${BAT}"/capacity)%"
}

# Get Battery Icon
get_baticon() {
    BAT=$(ls /sys/class/power_supply | grep BAT | head -n 1)
    BATSTATUS="$(cat /sys/class/power_supply/"${BAT}"/status)"

    BATVAL="$(cat /sys/class/power_supply/"${BAT}"/capacity)"
    BATVAL_DIV10=$(echo "$BATVAL/10" | bc -q)
    BATVAL_ROUNDED=$(echo "($BATVAL_DIV10 * 10)" | bc )


    if [ "$BATVAL_ROUNDED" == "100" ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󰁹"
        else
            echo "󰂅"
        fi

    elif [ "$BATVAL_ROUNDED" == "90" ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󰂂"
        else
            echo "󰂋"
        fi

    elif [ "$BATVAL_ROUNDED" ==  "80" ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󰂁"
        else
            echo "󰢞"
        fi

    elif [ "$BATVAL_ROUNDED" ==  "70" ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󰂀"
        else
            echo "󰢞"
        fi

    elif [ "$BATVAL_ROUNDED" ==  "60" ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󰁾"
        else
            echo "󰢝"
        fi

    elif [ "$BATVAL_ROUNDED" ==  "50" ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󰁾"
        else
            echo "󰢝"
        fi

    elif [ "$BATVAL_ROUNDED" ==  40 ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󰁽"
        else
            echo "󰂇"
        fi

    elif [ "$BATVAL_ROUNDED" ==  30 ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󰁼"
        else
            echo "󰂇"
        fi

    elif [ "$BATVAL_ROUNDED" ==  20 ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󰁻"
        else
            echo "󰢜"
        fi

    elif [ "$BATVAL_ROUNDED" ==  10 ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󰁺"
        else
            echo "󰢜"
        fi

    elif [ "$BATVAL_ROUNDED" ==  0 ];
    then
        if [[ "$BATSTATUS" == "Discharging" ]];
        then
            echo "󱃍"
        else
            echo "󰢜"
        fi
    fi
}


# <-- Volume -->
# Get Volume
get_vol() {
    pactl list sinks | grep '^[[:space:]]Volume:' |
        head -n $(($SINK + 1)) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,'
}

# Set Volume
set_vol() {
    pactl set-sink-volume @DEFAULT_SINK@ "$1"%
}

# Toggle Volume
toggle_vol() {
    pactl set-sink-mute @DEFAULT_SINK@ toggle
}

# Get Volume Icon
get_volicon() {
    MUTE="$(pactl get-sink-mute @DEFAULT_SINK@)"

    if [[ "$MUTE" == "Mute: no" ]];
    then
        echo "󰕾"
    else
        echo "󰸈"
    fi
}


# <-- Microphone -->
# Get Mic Icon
get_micicon() {
    MUTE="$(pactl get-source-mute @DEFAULT_SOURCE@)"
    if [[ "$MUTE" == "Mute: no" ]];
    then
        echo ""
    else
        echo ""
    fi
}

# Toggle Mic
toggle_mic() {
    pactl set-source-mute @DEFAULT_SOURCE@ toggle
}

# Get Mic
get_mic() {
    pactl get-source-volume @DEFAULT_SOURCE@ | grep -e '%' | sed 's/ //g' | cut -d "/" -f 2 | sed 's/%//'
}

# Set Mic
set_mic() {
    pactl set-source-volume @DEFAULT_SOURCE@ "$1"%
}


# <-- Networking -->
# Get Net
get_net() {
    if [ -z "$(nmcli connection show --active)" ];
    then
        echo "󰖪  Offline"
    else
        echo "󰖩  $(nmcli -t -f NAME connection show --active | head -n 1)"
    fi
}

# Toggle Net
toggle_net() {
    if [ -z "$(nmcli connection show --active)" ];
    then
        nmcli radio wifi on
    else
        nmcli radio wifi off
    fi
}


# <-- Bluetooth -->
# Get Bluetooth
get_bluetooth() {
    status=$(bluetoothctl show | grep Powered  | awk '{print $2}')
    if [ "$status" == "yes" ];
    then
        echo "󰂯"
    else
        echo "󰂲"
    fi
}

# Toggle Bluetooth
toggle_bluetooth() {
    status=$(bluetoothctl show | grep Powered  | awk '{print $2}')

    if [ "$status" == "yes" ];
    then
        bluetoothctl power off
    else
        bluetoothctl power on
    fi
}

# <-- Main -->
if [[ "$1" == "--get-blight" ]];
then
    get_blight
elif [[ "$1" == "--set-blight" ]];
then
    set_blight "$2"
elif [[ "$1" == "--bat" ]];
then
    get_battery
elif [[ "$1" == "--baticon" ]];
then
    get_baticon
elif [[ "$1" == "--set-vol" ]];
then
    set_vol "$2"
elif [[ "$1" == "--get-vol" ]];
then
    get_vol
elif [[ "$1" == "--toggle-vol" ]];
then
    toggle_vol
elif [[ "$1" == "--get-volicon" ]];
then
    get_volicon
elif [[ "$1" == "--get-micicon" ]];
then
    get_micicon
elif [[ "$1" == "--toggle-mic" ]];
then
    toggle_mic
elif [[ "$1" == "--get-mic" ]];
then
    get_mic
elif [[ "$1" == "--set-mic" ]];
then
    set_mic "$2"
elif [[ "$1" == "--get-net" ]];
then
    get_net
elif [[ "$1" == "--toggle-net" ]];
then
    toggle_net
elif [[ "$1" == "--get-bluetooth" ]];
then
    get_bluetooth
elif [[ "$1" == "--toggle-bluetooth" ]];
then
    toggle_bluetooth
elif [[ "$1" == "--sys-tray" ]];
then
    sys_tray
fi
